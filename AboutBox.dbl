
import System
import System.Collections.Generic
import System.ComponentModel
import System.Drawing
import System.Reflection
import System.Windows.Forms

namespace SpaSynVaders
	
	public partial class AboutBox extends Form
		
		public method AboutBox
			endparams
		proc
			this.InitializeComponent()
			this.Text = String.Format("About {0}", AssemblyTitle);
			this.labelProductName.Text = AssemblyProduct;
			this.labelVersion.Text = String.Format("Version {0}", AssemblyVersion);
			this.labelCopyright.Text = AssemblyCopyright;
			this.labelCompanyName.Text = AssemblyCompany;
			this.textBoxDescription.Text = AssemblyDescription;
		endmethod
		
		.region "Assembly Attribute Accessors"
		
		public property AssemblyTitle, string
			method get
				record
					attributes, [#]@Object
					titleAttribute, @AssemblyTitleAttribute
				endrecord
			proc
				attributes = Assembly.GetExecutingAssembly().GetCustomAttributes(^typeof(AssemblyTitleAttribute), false)
				if (attributes.Length > 0)
				begin
					titleAttribute = (AssemblyTitleAttribute)attributes[1]
					if (titleAttribute.Title != "")
						mreturn titleAttribute.Title
				end
				mreturn System.IO.Path.GetFileNameWithoutExtension(Assembly.GetExecutingAssembly().CodeBase)
			endmethod
		endproperty
		
		public property AssemblyVersion, string
			method get
			proc
				mreturn Assembly.GetExecutingAssembly().GetName().Version.ToString()
			endmethod
		endproperty
		
		public property AssemblyDescription, string
			method get
				record
					attributes, [#]@Object
				endrecord
			proc
				attributes = Assembly.GetExecutingAssembly().GetCustomAttributes(^typeof(AssemblyDescriptionAttribute), false)
				if (attributes.Length > 0) then
					mreturn ((AssemblyDescriptionAttribute)attributes[1]).Description
				else
					mreturn ""
				
			endmethod
		endproperty
		
		public property AssemblyProduct, string
			method get
				record
					attributes, [#]@Object
				endrecord
			proc
				attributes = Assembly.GetExecutingAssembly().GetCustomAttributes(^typeof(AssemblyProductAttribute), false)
				if (attributes.Length > 0) then
					mreturn ((AssemblyProductAttribute)attributes[1]).Product
				else
					mreturn ""
			endmethod
		endproperty
		
		public property AssemblyCopyright, string
			method get
				record
					attributes, [#]@Object
				endrecord
			proc
				attributes = Assembly.GetExecutingAssembly().GetCustomAttributes(^typeof(AssemblyCopyrightAttribute), false)
				if (attributes.Length > 0) then
					mreturn ((AssemblyCopyrightAttribute)attributes[1]).Copyright
				else
					mreturn ""
			endmethod
		endproperty
		
		public property AssemblyCompany, string
			method get
				record
					attributes, [#]@Object
				endrecord
			proc
				attributes = Assembly.GetExecutingAssembly().GetCustomAttributes(^typeof(AssemblyCompanyAttribute), false)
				if (attributes.Length > 0) then
					mreturn ((AssemblyCompanyAttribute)attributes[1]).Company
				else
					mreturn ""
			endmethod
		endproperty
		
		.endregion "Assembly Attribute Accessors"
		
	endclass
endnamespace


